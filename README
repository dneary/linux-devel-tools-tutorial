Pour les Jeudis du Libre, j'ai ajouté quelques informations 
supplémentaires dans le README. Ce sera sur une nouvelle branche.

1. Créer un repo:

$ git init
$ git add -A
$ git commit -m "Initial commit"

2. Récupérer un repo:

$ git clone <uri>
$ cd <dir>
$ git checkout <branch>

3. Faire des changements

- Modifier des fichiers
$ git add <filename>
$ git commit -m "commit message" ou git commit [une éditeur s'ouvre]
ou:
$ git commit -a -m "commit message"

4. Créer et partagter une branche
$ git branch <branchname>
$ git checkout <branchname>
$ git push <remotename>

5. Donner une alias à une remote
$ git remote <alias> <uri>

6. Reporter des changements d'une branche sur une autre

 - Déscription de merge
 - Déscription de rebase
 - Déscription de rebase --interactive

Dans une branche, je peux créer les contenus que je veux, les modifier
comme je veux, committer autant que je veux.

Je peux travailler sur plusieurs tâches à la fois, bien que ce ne soit
pas conseillé, et réorganiser les commits après coup.

1. git clone git@github.com:dneary/linux-devel-tools-tutorial.git
 - Crée une copie locale du référentiel à distance

2. git branch crazyfeature
3. git checkout crazyfeature
 - Initialisation & utilisation d'une branche dans référentiel local

4. Travaille sur le feature fou
5. git commit -a -m "Première ébauche pour la nouvelle fonctionnalité fou"
6. git push origin
 - Crée branche à distance, afin que d'autres puissent le voir

