Pour les Jeudis du Libre, j'ai ajouté quelques informations 
supplémentaires dans le README. Ce sera sur une nouvelle branche.

1. Créer un repo:

$ git init
$ git add -A
$ git commit -m "Initial commit"

2. Crée une copie locale du référentiel à distance
$ git clone git@github.com:dneary/linux-devel-tools-tutorial.git
$ cd linux-devel-tools-tutorial
$ git checkout <branch>

3. Faire des changements
- Modifier des fichiers
$ git add <filename>
$ git commit -m "commit message" ou git commit [une éditeur s'ouvre]
ou:
$ git commit -a -m "commit message"

4. Créer et partagter une branche
$ git branch crazyfeature
$ git checkout crazyfeature
 - Initialisation & utilisation d'une branche dans référentiel local

5. Travaille sur le feature fou
- Modifier des fichiers
$ git commit -a -m "Première ébauche pour la nouvelle fonctionnalité fou"

6. Partage feature sur une branche
$ git push origin
 - Peut également mettre le nom de la branch, ou une autre <remote>

7. Donner une alias à une remote
$ git remote <alias> <uri>

8. Reporter des changements d'une branche sur une autre

 - Déscription de merge
 - Déscription de rebase
 - Déscription de rebase --interactive

Dans une branche, je peux créer les contenus que je veux, les modifier
comme je veux, committer autant que je veux.

Je peux travailler sur plusieurs tâches à la fois, bien que ce ne soit
pas conseillé, et réorganiser les commits après coup.
